Description: >
    challange #3 solution

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    AMItoUse:
      Description: AMI to use for our base image
      Type: String

Resources:

  RoleForSSMAcess:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      
  ServerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref RoleForSSMAcess

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        Fn::ImportValue:
             Fn::Sub: ${EnvironmentName}-VPCID  
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0



  Instance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref AMItoUse
      IamInstanceProfile: !Ref ServerInstanceProfile
      NetworkInterfaces: 
        - DeviceIndex: "0" #This is must be assigned # This for the Network Interface card attached to the EC2
          GroupSet: 
            - Ref: "InstanceSecurityGroup"
          SubnetId:
            Fn::ImportValue:
             Fn::Sub: ${EnvironmentName}-PRI1-SN
            










    
